@* PartialView 的局部樣式 *@
<link href="~/datatables/css/jquery.datatables.min.css" rel="stylesheet" />
<link href="~/font-awesome/css/all.min.css" rel="stylesheet" />
<style asp-add-nested-styles="true">

    /* datatables 樣式設定 */

    /* 每頁數量 文字顏色*/
    .dataTables_length label {
        color: white;
    }
    /* 數量顯示結果 文字顏色*/
    .dataTables_info {
        color: white !important;
    }
    /* 搜尋 文字顏色*/
    .dataTables_wrapper .dataTables_filter label {
        color: white;
    }
    /* 分頁按鈕顏色 */
    .dataTables_wrapper .dataTables_paginate .paginate_button {
        color: white !important;
    }
    /* 標題列設定 */
    thead {
        background-color: black;
        color: white;
    }

    /* 間隔空間 */
    .dataTables_length {
        margin-left: 10px;
        margin-bottom: 10px;
    }

        .dataTables_length label select {
            border-radius: 5px;
        }

    .dataTables_filter {
        margin-right: 10px;
        margin-bottom: 10px;
    }

    /* RowDetail Icon setting */
    td.details-control .detailIcon {
        cursor: pointer;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 15px;
        color: black;
    }

    tr.shown td.details-control .detailIcon {
        color: black;
    }

    /* 推薦行文字顏色 */
    .black-row {
        color: black !important;
    }

    .green-row {
        color: green !important;
    }

    .blue-row {
        color: blue !important;
    }

    .red-row {
        color: red !important;
    }
</style>
@* PartialView 的內容 *@
<div>
    <div class="container-fluid p-2">
        <div class="row">
            <div class="col-12 col-md-4 d-flex align-items-center justify-content-center">
                <label class="text-white m-0 h3 me-2">硬體選擇</label>
                <select asp-items="@ViewBag.ComputerParts" class="form-select" style="width:250px;height:40px" id="HardSelect">
                    <option value="" disabled selected hidden>---- 請選擇 ----</option>
                </select>
            </div>
            <div class="col-12 col-md-3 d-flex justify-content-center justify-content-md-start align-items-center">
                <button class="btn btn-secondary m-3" id="UpdateHardwareOne">單一零件更新</button>
                <button class="btn btn-secondary m-3" id="UpdateHardwareAll">全零件更新</button>
            </div>
            <div class="col-12 col-md-5 d-flex justify-content-center justify-content-md-start align-items-center">
                <img src="~/img/loading-block-white.gif" style="width:30px;height:30px;display:none" id="HardwareLoading" />
                <span id="UpdateResult" style="color:white" class="h3"></span>
            </div>
        </div>
    </div>
    <table id="HardwareManageTable" class="display" data-bs-theme="dark">
        <thead>
            <tr>
                <th></th>
                <th>ID</th>
                <th>產品名稱</th>
                <th>規格</th>
                <th>種類</th>
                <th>價格</th>
                <th>瓦數</th>
            </tr>
        </thead>
    </table>
</div>
<script src="~/datatables/js/jquery.datatables.min.js"></script>
<script src="~/font-awesome/js/all.min.js"></script>
<script>
    $(document).ready(function () {

        let HardAddress = "https://localhost:7097";

        // 單一零件更新
        $("#UpdateHardwareOne").on("click", function () {
            // 清空結果訊息
            $("#UpdateResult").text("");
            // 取得 零件ID
            let p = getType();
            if (p == "NoSeclect") {
                $("#UpdateResult").text("請選擇要更新的硬體種類").fadeIn(200, function () {
                    // 在 fadeIn 完成后延遲 1000 毫秒，執行 fadeOut
                    $(this).delay(1000).fadeOut(300);
                });;;
                return;
            }
            // 顯示進度條
            $("#HardwareLoading").show();
            // 發送非同步POST請求 ==> 資料庫資料變更
            let itemid = Number(p.slice(5));
            var data = {
                Type: itemid
            };
            fetch(`${HardAddress}@Url.Action("UpdateHardwareOne", "Admin")`, {
                method: "POST",
                body: JSON.stringify(data),
                headers: {
                    "Content-Type": "application/json"
                }
            }).then(result => {
                // 此時 result 是一個請求結果的物件
                // 注意傳回值型態，字串用 text()，JSON 用 json()
                $("#HardwareLoading").hide();
                //  如過 HTTP 響應的狀態馬碼在 200 到 299 的範圍內 ==> .ok 會回傳 true
                if (result.ok) {
                    return result.text();
                }
            }).then(data => {
                // 此時 data 為上一個 then 回傳的資料
                $("#UpdateResult").text(data).fadeIn(200, function () {
                    // 在 fadeIn 完成后延遲 1000 毫秒，執行 fadeOut
                    $(this).delay(1000).fadeOut(300);
                });;
                getdatatableData();
            }).catch(error => {
                $("#HardwareLoading").hide();
                $("#UpdateResult").text(data).fadeIn(200, function () {
                    // 在 fadeIn 完成后延遲 1000 毫秒，執行 fadeOut
                    $(this).delay(1000).fadeOut(300);
                });;
                alert(error);
            });
        });

        // 全零件更新
        $("#UpdateHardwareAll").on("click", function () {
            // 清空結果訊息
            $("#UpdateResult").text("");
            // 顯示進度條
            $("#HardwareLoading").show();
            // 發送非同步POST請求 ==> 資料庫資料變更
            fetch(`${HardAddress}@Url.Action("UpdateHardwareAll", "Admin")`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                }
            }).then(result => {
                // 此時 result 是一個請求結果的物件
                // 注意傳回值型態，字串用 text()，JSON 用 json()
                $("#HardwareLoading").hide();
                //  如過 HTTP 響應的狀態馬碼在 200 到 299 的範圍內 ==> .ok 會回傳 true
                if (result.ok) {
                    return result.text();
                }
            }).then(data => {
                // 此時 data 為上一個 then 回傳的資料
                $("#UpdateResult").text(data).fadeIn(200, function () {
                    // 在 fadeIn 完成后延遲 1000 毫秒，執行 fadeOut
                    $(this).delay(1000).fadeOut(300);
                });;
                let p = getType();
                if (p != "NoSeclect") {
                    getdatatableData();
                }
            }).catch(error => {
                $("#HardwareLoading").hide();
                $("#UpdateResult").text(data).fadeIn(200, function () {
                    // 在 fadeIn 完成后延遲 1000 毫秒，執行 fadeOut
                    $(this).delay(1000).fadeOut(300);
                });;
                alert(error);
            });
        
        });

        // 設定 datatable
        var datatable = $("#HardwareManageTable").DataTable({
            columns: [
                {
                    "class": 'details-control',
                    "orderable": false,
                    "data": null,
                    "defaultContent": '<div class="detailIcon">▶</div>',
                    "width": "3%"
                },
                { "data": "productId", "width": "5%", "className": "text-center" },
                { "data": "productName", "width": "25%" },
                { "data": "specification", "width": "15%" },
                { "data": "componentClassificationName", "width": "15%" },
                { "data": "price", "width": "5%", "className": "text-center" },
                { "data": "wattage", "width": "5%", "className": "text-center" }
            ],
            columnDefs: [
                {
                    targets: 3, //第四列
                    render: function (data, type, row, meta) {
                        // 超過30個字就截斷字串
                        if (type === 'display' && data.length > 30) {
                            return data.substr(0, 10) + '...';
                        }
                        return data;
                    }
                }
            ],
            fixedHeader: { header: true },
            language: {
                url: '//cdn.datatables.net/plug-ins/2.0.3/i18n/zh-HANT.json'
            },
            order: [[1, 'asc']],
            // 讀取 顯示 轉圈圈
            processing: true,
            // 關閉 自動計算寬度
            autoWidth: false,
            createdRow: function (row, data, dataIndex) {
                if (data.recommend == 0) {
                    $(row).addClass('black-row');
                } else if (data.recommend == 1) {
                    $(row).addClass('green-row');
                } else if (data.recommend == 2) {
                    $(row).addClass('blue-row');
                } else if (data.recommend == 3) {
                    $(row).addClass('red-row');
                }
            }
        });

        function getType() {
            var selectedOption = $("#HardSelect").val();
            switch (selectedOption) {
                case "CPU 中央處理器":
                    return encodeURI("Type=10000");
                    break;
                case "GPU 顯示卡":
                    return encodeURI("Type=10001");
                    break;
                case "RAM 記憶體":
                    return encodeURI("Type=10002");
                    break;
                case "MotherBoard 主機板":
                    return encodeURI("Type=10003");
                    break;
                case "SSD 固態硬碟":
                    return encodeURI("Type=10004");
                    break;
                case "HDD 傳統硬碟":
                    return encodeURI("Type=10005");
                    break;
                case "AirCooler 風冷散熱器":
                    return encodeURI("Type=10006");
                    break;
                case "LiquidCooler 水冷散熱器":
                    return encodeURI("Type=10007");
                    break;
                case "CASE 機殼":
                    return encodeURI("Type=10008");
                    break;
                case "PSU 電源供應器":
                    return encodeURI("Type=10009");
                    break;
                case "OS 作業系統":
                    return encodeURI("Type=10010");
                    break;
                default:
                    return "NoSeclect";
            };
        };

        function getdatatableData() {
            let p = getType();
            // 發送非同步GET請求
            fetch(`${HardAddress}@Url.Action("HardwareData", "Admin")?${p}`, {
                method: "GET"
            }).then(result => {
                // 此時 result 是一個請求結果的物件
                // 注意傳回值型態，字串用 text()，JSON 用 json()
                if (result.ok) {
                    return result.json();
                }
            }).then(data => {
                // 此時 data 為上一個 then 回傳的資料
                // 清空表格
                datatable.clear().draw();
                // 添加新的資料
                datatable.rows.add(data).draw();
            }).catch(error => {
                alert(error);
            });
        };

        $("#HardSelect").change(function () {
            getdatatableData();

        });

        // RowDetail 內容
        function format(d) {
            let color = "black"; // 默認顏色
            let RadioId = "recommend" + d.productId;
            return (
                `<div id="recommend${d.productId}" style="color: black;"> 推薦設定:
                            <label style="color: black;"><input type="radio" name="${RadioId}" value="0" ${d.recommend == 0 ? 'checked' : ''}> 無</label>
                                <label style="color: green;"><input type="radio" name="${RadioId}" value="1" ${d.recommend == 1 ? 'checked' : ''}> 基本</label>
                                <label style="color: blue;"><input type="radio" name="${RadioId}" value="2" ${d.recommend == 2 ? 'checked' : ''}> 優良</label>
                                <label style="color: red;"><input type="radio" name="${RadioId}" value="3" ${d.recommend == 3 ? 'checked' : ''}> 完美</label>
                                <i class="fa-solid fa-spinner fa-spin ms-2"style="color:black;display:none" id="loading${d.productId}"></i>
                                    <span id="result${d.productId}" class="ms-2" style="color: black;"></span>
                         </div>`
            );
        };
        // 推薦變更事件W
        function radioevent(rowDetail) {
            $(rowDetail).on('change', 'input[type="radio"]', function () {
                // 獲取 Radiobutton 的 ID
                let itemid = Number($(this).attr('name').slice('9'));
                let value = Number($(this).val());

                // 發送非同步POST請求 ==> 資料庫資料變更
                // 顯示進度條
                $("#loading" + itemid).show();
                $("#result" + itemid).text("");
                var data = {
                    ProductId: itemid,
                    recommend: value
                };
                fetch(`${HardAddress}@Url.Action("recommendChange", "Admin")`, {
                    method: "POST",
                    body: JSON.stringify(data),
                    headers: {
                        "Content-Type": "application/json"
                    }
                }).then(result => {
                    // 此時 result 是一個請求結果的物件
                    // 注意傳回值型態，字串用 text()，JSON 用 json()
                    $("#loading" + itemid).hide();
                    //  如過 HTTP 響應的狀態馬碼在 200 到 299 的範圍內 ==> .ok 會回傳 true
                    if (result.ok) {
                        return result.text();
                    }
                }).then(data => {
                    // 此時 data 為上一個 then 回傳的資料
                    $("#result" + itemid).text(data).fadeIn(200, function () {
                        // 在 fadeIn 完成后延遲 1000 毫秒，執行 fadeOut
                        $(this).delay(1000).fadeOut(300);
                    });;
                }).catch(error => {
                    $("#result" + itemid).text(data).fadeIn(200, function () {
                        // 在 fadeIn 完成后延遲 1000 毫秒，執行 fadeOut
                        $(this).delay(1000).fadeOut(300);
                    });;
                    alert(error);
                });

                // 前端視覺效果
                let divid = "recommend" + itemid;
                let targetRow = $(`#${divid}`).parent().parent().prev();
                let colorclass = "";
                switch (value) {
                    case 0:
                        colorclass = "black-row";
                        break;
                    case 1:
                        colorclass = "green-row";
                        break;
                    case 2:
                        colorclass = "blue-row";
                        break;
                    case 3:
                        colorclass = "red-row";
                        break;
                }
                if (targetRow.hasClass('black-row')) {
                    targetRow.removeClass('black-row');
                    targetRow.addClass(colorclass);
                }
                else if (targetRow.hasClass('green-row')) {
                    targetRow.removeClass('green-row');
                    targetRow.addClass(colorclass);
                }
                else if (targetRow.hasClass('blue-row')) {
                    targetRow.removeClass('blue-row');
                    targetRow.addClass(colorclass);
                }
                else if (targetRow.hasClass('red-row')) {
                    targetRow.removeClass('red-row');
                    targetRow.addClass(colorclass);
                }
            });
        }

        // Add event listener for opening and closing details
        $('#HardwareManageTable tbody').on('click', 'td.details-control', function () {
            var tr = $(this).closest('tr');
            var row = datatable.row(tr);
            if (row.child.isShown()) {
                // This row is already open - close it
                row.child.hide();
                tr.removeClass('shown');
                $(this).find('.detailIcon').text("▶");
            }
            else {
                // Open this row
                row.child(format(row.data())).show();
                tr.addClass('shown');
                $(this).find('.detailIcon').text("▼");

                // 獲取子元素（row.detail）
                var rowDetail = $(tr).next();
                // 綁定事件(推薦變更)
                radioevent(rowDetail);
            }
        });



    });
</script>