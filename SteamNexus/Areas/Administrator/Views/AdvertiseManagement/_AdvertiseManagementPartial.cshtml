@* PartialView 的 CSS *@
<style asp-add-nested-styles="true">

    /***** datatables 自訂樣式 *****/

    /* 標題列設定 */
    thead {
        background-color: black;
        color: white;
    }

    .dt-end .dt-search {
        text-align: center !important;
        /* 將搜索框的文字內容設置為居中對齊 */
    }

    .dt-middle {
        text-align: end !important;
    }

    body {
        table-layout: fixed;
        /* 將表格的列寬設置為固定值，以確保列寬不會根據內容而自動調整 */
    }
</style>

@* PartialView 的 HTML *@
<div class="page-title position-relative">
    <div class="row">
        @* 系統名稱 *@
        <div class="col-12 col-md-6 order-md-1 d-flex justify-content-center justify-content-md-start">
            <h2 id="SystemName" style="margin-top: 8px;">廣告管理系統</h2>
        </div>
        @* 系統選單 *@
        <div class="col-12 col-md-6 order-md-2 d-flex justify-content-center justify-content-md-end" id="SystemMenu">
            @* <select asp-items="@ViewBag.ComputerParts" class="form-select " style="width:250px;height:40px;margin-bottom:8px" id="HardSelect">
                <option value="" disabled selected hidden>---- 請選擇硬體 ----</option>
            </select> *@
        </div>
    </div>
</div>
<section class="section">
    <table id="AdvertiseManageTable" class="display" style="width:100%">
        <thead>
            <tr>
                <th>ID</th>
                <th>標題</th>
                <th>Url</th>
                <th>圖片</th>
                <th>說明</th>
                <th>狀態</th>
            </tr>
        </thead>
    </table>
</section>
@* PartialView 的 JavaScript *@
<script>
    $(document).ready(function () {
        let baseAddress = "https://localhost:7097";
        // var datatable = new DataTable('#AdvertiseManageTable', {
        //     ajax: {
        //         type: "GET",
        //         url: `@Url.Action("AdvertiseManagementJson", "AdvertiseManagement", new { area = "Administrator" })`,
        //         dataSrc: function (json) { return json; }
        //     },
        //     columns:[
        //         { "data": "advertisementId", "width":"20%"},
        //         { "data": "title", "width": "20%" },
        //         { "data": "url", "width": "20%" },
        //         { "data": "imagePath", "width": "20%" },
        //         { "data": "discription", "width": "20%" }
        //     ],
        //     fixedHeader: {
        //         // 固定 header
        //         header: true,
        //         // 使用導覽欄的高度作為偏移量
        //         headerOffset: $('#pageNav').outerHeight(),
        //     },
        //     // 響應式設計
        //     responsive: true,
        //     // 語言設定
        //     language: {
        //         url: '//cdn.datatables.net/plug-ins/2.0.3/i18n/zh-HANT.json',
        //     },
        //     // 預設排序 ~ 根據第一個欄位 升冪排序
        //     order: [[1, 'asc']],
        //     // 自動寬度 關閉
        //     autoWidth: true,
        // })
        var datatable = new DataTable('#AdvertiseManageTable', {
            columns: [
                { "data": "advertisementId", "width": "5%" },
                { "data": "title", "width": "10%" },
                { "data": "url", "width": "15%" },
                {
                    "data": "imagePath", "width": "15%",
                    "className": "text-center",
                    "render": function (data, type, row) {
                        return `<img src="/AdImages/${data}" alt="Image" style="width:80%" />`;
                    }, responsivePriority: 1
                },
                { "data": "discription", "width": "10%" },
                {
                    "data": "isShow",
                    "width": "8%",
                    "className": "text-center",
                    // 推薦 ~ 下拉式選單
                    render: function (data, type, row) {
                        // data: 欄位的資料值
                        // type: render 的呼叫類型，例如 'display', 'filter', 'sort', 'type'
                        // row: 包含整列資料的物件
                        let AdId = row.advertisementId;
                        const Show = data ? 'checked' : '';
                        const UnShow = data ? '' : 'checked';
                        let showEle = `<input type="radio" name = "${AdId}" value = "true" data - AdId="${AdId}" id = "${AdId}Show" ${Show}> <label for= "${AdId}Show" >上架</label>`;
                        let unShowEle = `<input type="radio" name="${AdId}" value="false" data-AdId="${AdId}" id="${AdId}UnShow" ${UnShow}><label for="${AdId}UnShow">下架</label>`;
                        return `${showEle}<br/>${unShowEle}`;
                    }
                },
                {
                    "data": null,
                    "orderable": false,
                    "width": "5%",
                    "className": "text-center",
                    // 按鈕 自定義
                    render: function (data, type, row) {
                        // 取得 productId
                        let title = row.title;
                        let AdId = row.advertisementId;
                        // 編輯按鈕
                        let editEle = '<button data-AdId="' + AdId + '"  data-title="' + title + '" id="edit_button" data-bs-toggle="popover" data-bs-content="nothing"><i class="bi bi-pencil-square"></i></button>';
                        // 刪除按鈕
                        let deletEle = '<button data-AdId="' + AdId + '"  data-title="' + title + '" id="delete_button" data-bs-toggle="popover" data-bs-content="nothing"><i class="bi bi-trash3"></i></button>';
                        if (type === 'display') {
                            return `${editEle}${deletEle}`;
                        }
                        return data;
                    }, responsivePriority: 1
                }
            ],
            fixedHeader: {
                // 固定 header
                header: true
            },
            // 響應式設計
            responsive: true,
            // 語言設定
            language: {
                url: '//cdn.datatables.net/plug-ins/2.0.3/i18n/zh-HANT.json',
            },
            // 預設排序 ~ 根據第一個欄位 升冪排序
            order: [[0, 'asc']],
            // 自動寬度 開啟
            autoWidth: true,
        });

        // 使用 Fetch API 取得資料並設定至 DataTable
        fetch('@Url.Action("AdvertiseManagementJson", "AdvertiseManagement", new { area = "Administrator" })')
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(jsonData => {
                datatable.clear().rows.add(jsonData).draw();
            })
            .catch(error => {
                console.error('Fetch error:', error);
            });

    });
</script>

@* @model IEnumerable<SteamNexus.Models.Advertisement>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Url)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImagePath)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Discription)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Url)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ImagePath)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Discription)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.AdvertisementId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.AdvertisementId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.AdvertisementId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table> *@
